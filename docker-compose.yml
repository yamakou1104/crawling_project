services:
  # スクレイピングサービス
  crawler:
    build: .
    volumes:
      - ./app:/app
      - ./app/data:/app/data
    ports:
      - '8080:80'
    command: python app.py
    environment:
      - SCRAPER_URL=https://news.yahoo.co.jp/pickup/6533684
      - SCRAPER_OUTPUT_DIR=data
      - SCRAPER_MIN_TEXT_LENGTH=50
      - SCRAPER_DELAY=1
      # - SCRAPER_USER_AGENT=カスタムユーザーエージェント（必要に応じて設定）
      - SCRAPER_KEYWORD=タイミー
      - SCRAPER_VERBOSE=true
      # 要約機能を使用する場合（オプション）
      - SCRAPER_SUMMARIZE=true
      - GEMINI_API_KEY=AIzaSyD2wrSQ0EL9qUwI_1EOh4eQT0AMEUEKFug
      - SCRAPER_SUMMARY_LANGUAGE=Japanese
      - SCRAPER_SUMMARY_STYLE=bullet
      - SCRAPER_SUMMARY_LENGTH=200
    tty: true
    depends_on:
      - redis

  # Celeryワーカー
  celery_worker:
    build: .
    volumes:
      - ./app:/app
      - ./app/data:/app/data
    command: celery -A celery_app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  # Celeryスケジューラ
  celery_beat:
    build: .
    volumes:
      - ./app:/app
    command: celery -A celery_app beat --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  # Redisサーバー（メッセージブローカー）
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Flask Web UI
  web_ui:
    build: .
    volumes:
      - ./app:/app
      - ./app/data:/app/data
    ports:
      - "5000:5000"
    command: python web_ui.py
    environment:
      - FLASK_SECRET_KEY=dev_key_for_crawler
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

volumes:
  redis_data:
